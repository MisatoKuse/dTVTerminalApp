apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "com.nttdocomo.android.tvterminalapp"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 3
        versionName "90.20.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                cppFlags ""
                abiFilters  "armeabi" //, "armeabi-v7a"
            }
        }
        ndk {
            abiFilters 'armeabi' //'armeabi-v7a'
        }
    }
    signingConfigs {
        dcmeval {
            storeFile file('keys/dcmEval20150128.keystore')
            storePassword 'spmode20100901'
            keyAlias 'dcmeval2048'
            keyPassword 'dcmeval2048'
            v2SigningEnabled false
        }
    }
    buildTypes {
        // 未署名、debug・Log OFF
        unsigned_off {
            debuggable false
            jniDebuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            versionNameSuffix '0200'
            externalNativeBuild {
                cmake {
                    cppFlags.add("-DENABLE_LOG_INFO")
                    cppFlags.add("-DENABLE_LOG_ERROR")
                    cFlags.add("-DENABLE_LOG_INFO")
                    cFlags.add("-DENABLE_LOG_ERROR")
                }
            }
        }
        // 未署名、debug・Log ON
        unsigned_on {
            debuggable true
            jniDebuggable true
            minifyEnabled false
            versionNameSuffix '1200'
            externalNativeBuild {
                cmake {
                    cppFlags.add("-DENABLE_LOG_DEBUG")
                    cppFlags.add("-DENABLE_LOG_INFO")
                    cppFlags.add("-DENABLE_LOG_ERROR")
                    cFlags.add("-DENABLE_LOG_DEBUG")
                    cFlags.add("-DENABLE_LOG_INFO")
                    cFlags.add("-DENABLE_LOG_ERROR")
                }
            }
        }
        // 開発署名付、debug・Log OFF
        signed_off {
            debuggable false
            jniDebuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.dcmeval
            versionNameSuffix '2200'
            externalNativeBuild {
                cmake {
                    cppFlags.add("-DENABLE_LOG_INFO")
                    cppFlags.add("-DENABLE_LOG_ERROR")
                    cFlags.add("-DENABLE_LOG_INFO")
                    cFlags.add("-DENABLE_LOG_ERROR")
                }
            }
        }
        // 開発署名付、debug・Log ON
        signed_on {
            debuggable true
            jniDebuggable true
            minifyEnabled false
            signingConfig signingConfigs.dcmeval
            versionNameSuffix '3200'
            externalNativeBuild {
                cmake {
                    cppFlags.add("-DENABLE_LOG_DEBUG")
                    cppFlags.add("-DENABLE_LOG_INFO")
                    cppFlags.add("-DENABLE_LOG_ERROR")
                    cFlags.add("-DENABLE_LOG_DEBUG")
                    cFlags.add("-DENABLE_LOG_INFO")
                    cFlags.add("-DENABLE_LOG_ERROR")
                }
            }
        }
        // 検証サーバ向き、未署名、debug・Log OFF
        _test_unsigned_off {
            debuggable false
            jniDebuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            versionNameSuffix '4200'
            externalNativeBuild {
                cmake {
                    cppFlags.add("-DENABLE_LOG_INFO")
                    cppFlags.add("-DENABLE_LOG_ERROR")
                    cFlags.add("-DENABLE_LOG_INFO")
                    cFlags.add("-DENABLE_LOG_ERROR")
                }
            }
        }
        // 検証サーバ向き、未署名、debug・Log O
        _test_unsigned_on {
            debuggable true
            jniDebuggable true
            minifyEnabled false
            versionNameSuffix '5200'
            externalNativeBuild {
                cmake {
                    cppFlags.add("-DENABLE_LOG_DEBUG")
                    cppFlags.add("-DENABLE_LOG_INFO")
                    cppFlags.add("-DENABLE_LOG_ERROR")
                    cFlags.add("-DENABLE_LOG_DEBUG")
                    cFlags.add("-DENABLE_LOG_INFO")
                    cFlags.add("-DENABLE_LOG_ERROR")
                }
            }
        }
        // 検証サーバ向き、開発署名付、debug・Log OFF
        _test_signed_off {
            debuggable false
            jniDebuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.dcmeval
            versionNameSuffix '6200'
            externalNativeBuild {
                cmake {
                    cppFlags.add("-DENABLE_LOG_INFO")
                    cppFlags.add("-DENABLE_LOG_ERROR")
                    cFlags.add("-DENABLE_LOG_INFO")
                    cFlags.add("-DENABLE_LOG_ERROR")
                }
            }
        }
        // 検証サーバ向き、開発署名付、debug・Log ON
        _test_signed_on {
            debuggable true
            jniDebuggable true
            minifyEnabled false
            signingConfig signingConfigs.dcmeval
            versionNameSuffix '7200'
            externalNativeBuild {
                cmake {
                    cppFlags.add("-DENABLE_LOG_DEBUG")
                    cppFlags.add("-DENABLE_LOG_INFO")
                    cppFlags.add("-DENABLE_LOG_ERROR")
                    cFlags.add("-DENABLE_LOG_DEBUG")
                    cFlags.add("-DENABLE_LOG_INFO")
                    cFlags.add("-DENABLE_LOG_ERROR")
                }
            }
        }
    }

    sourceSets {
        main {
            aidl.srcDirs = [
                    'src/main/aidl'
            ]
            res.srcDirs =
                    [
                            'src/main/res/layout/launch',
                            'src/main/res/layout/home',
                            'src/main/res/layout/tvprogram',
                            'src/main/res/layout/video',
                            'src/main/res/layout/search',
                            'src/main/res/layout/ranking',
                            'src/main/res/layout/other',
                            'src/main/res/layout/player',
                            'src/main/res/layout',
                            'src/main/res'
                    ]
        }
    }
    externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
        }
    }
}

repositories { flatDir { dirs 'libs' } }

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:support-v4:26.1.0'
    compile 'com.android.support:design:26.1.0'
    testCompile 'junit:junit:4.12'

//    //DiXiM SecurePlayer SDK Release Version
//    compile(name: 'dixim-android-activation-lib', ext: 'aar')
//    compile(name: 'dixim-android-player-lib', ext: 'aar')
//    compile(name: 'dixim-android-player-secure-nativecodec', ext: 'aar')
//    compile(name: 'dixim-android-player-secure-openmaxal', ext: 'aar')
//    compile(name: 'dixim-android-util2', ext: 'aar')
    //DiXiM SecurePlayer SDK Debug Version
    compile(name: 'dixim-android-activation-lib-debug', ext: 'aar')
    compile(name: 'dixim-android-player-lib-debug', ext: 'aar')
    compile(name: 'dixim-android-player-secure-nativecodec-debug', ext: 'aar')
    compile(name: 'dixim-android-player-secure-openmaxal-debug', ext: 'aar')
    compile(name: 'dixim-android-util2-debug', ext: 'aar')

}
